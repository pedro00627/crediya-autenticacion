dependencies {
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    implementation project(':model')
    implementation project(':usecase')
    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation "org.springdoc:springdoc-openapi-starter-webflux-ui:${springdocVersion}"
    // Spring Security for WebFlux
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // JWT Dependencies
    implementation "io.jsonwebtoken:jjwt-api:${jjwtVersion}"
    runtimeOnly "io.jsonwebtoken:jjwt-impl:${jjwtVersion}"
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:${jjwtVersion}"

    // Dependencia a la librer√≠a common-logging
    implementation "com.github.pedro00627:common-logging:${loggingVersion}"

    testImplementation project(':app-service')
}

sourceSets {
    test {
        compileClasspath += project(':app-service').sourceSets.main.output
        runtimeClasspath += project(':app-service').sourceSets.main.output
    }
}