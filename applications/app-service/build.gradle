apply plugin: 'org.springframework.boot'

dependencies {
    testImplementation 'com.tngtech.archunit:archunit:1.4.1'
    // Project dependencies
    implementation project(':model')
    implementation project(':r2dbc-postgresql')
    implementation project(':reactive-web')
    implementation project(':usecase')

    // Implementation dependencies
    implementation "org.reactivecommons.utils:object-mapper:${reactiveCommonsMapperVersion}"
    implementation 'io.micrometer:context-propagation:1.0.6'
    implementation 'io.micrometer:micrometer-tracing-bridge-brave'
    implementation 'org.apache.logging.log4j:log4j-layout-template-json'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // Runtime Only dependencies
    runtimeOnly 'org.springframework.boot:spring-boot-devtools'

    // Test Implementation dependencies
    testImplementation "com.tngtech.archunit:archunit:${archunitVersion}"
    testImplementation 'com.fasterxml.jackson.core:jackson-databind'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.register('explodedJar', Copy) {
    with jar
    into layout.buildDirectory.dir("exploded")
}

jar {
    // To disable the *-plain.jar
    enabled = false
}

bootJar {
    // Sets output jar name
    archiveFileName = "${project.getParent().getName()}.${archiveExtension.get()}"
    mainClass = 'co.com.pragma.MainApplication'
}